// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Muse;

namespace Muse.Migrations
{
    [DbContext(typeof(MuseContext))]
    [Migration("20200905145451_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0-preview1.19506.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Muse.Models.Local.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TotalTracks")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("album");
                });

            modelBuilder.Entity("Muse.Models.Local.Band", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("artist");
                });

            modelBuilder.Entity("Muse.Models.Local.BandGenre", b =>
                {
                    b.Property<string>("BandId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("GenreId")
                        .HasColumnType("bigint");

                    b.HasKey("BandId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("band_genre");
                });

            modelBuilder.Entity("Muse.Models.Local.Genre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<long?>("SingleTrackId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SingleTrackId");

                    b.ToTable("genre");
                });

            modelBuilder.Entity("Muse.Models.Local.Playlist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentPopularity")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpotifyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("playlist");
                });

            modelBuilder.Entity("Muse.Models.Local.PlaylistTrack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentPopularity")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DateAdded")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("PlaylistId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrackId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("TrackId");

                    b.ToTable("playlist_track");
                });

            modelBuilder.Entity("Muse.Models.Local.SingleTrack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BandId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("BandId");

                    b.HasIndex("SongId");

                    b.ToTable("track");
                });

            modelBuilder.Entity("Muse.Models.Local.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("song");
                });

            modelBuilder.Entity("Muse.Models.Local.BandGenre", b =>
                {
                    b.HasOne("Muse.Models.Local.Band", "Band")
                        .WithMany("BandGenre")
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Muse.Models.Local.Genre", "Genre")
                        .WithMany("BandGenre")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Muse.Models.Local.Genre", b =>
                {
                    b.HasOne("Muse.Models.Local.SingleTrack", null)
                        .WithMany("Genres")
                        .HasForeignKey("SingleTrackId");
                });

            modelBuilder.Entity("Muse.Models.Local.PlaylistTrack", b =>
                {
                    b.HasOne("Muse.Models.Local.Playlist", "Playlist")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Muse.Models.Local.SingleTrack", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Muse.Models.Local.SingleTrack", b =>
                {
                    b.HasOne("Muse.Models.Local.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId");

                    b.HasOne("Muse.Models.Local.Band", "Band")
                        .WithMany()
                        .HasForeignKey("BandId");

                    b.HasOne("Muse.Models.Local.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId");
                });
#pragma warning restore 612, 618
        }
    }
}
