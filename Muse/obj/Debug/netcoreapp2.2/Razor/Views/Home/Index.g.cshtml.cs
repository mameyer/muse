#pragma checksum "/home/mmeyer/projects/Muse/Muse/Views/Home/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fd14c8d984e7ee763c31feb7bcd83cd8f2d98951"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/home/mmeyer/projects/Muse/Muse/Views/_ViewImports.cshtml"
using Muse;

#line default
#line hidden
#line 2 "/home/mmeyer/projects/Muse/Muse/Views/_ViewImports.cshtml"
using Muse.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fd14c8d984e7ee763c31feb7bcd83cd8f2d98951", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9c0eaa3a50510a1c4dfa4ed028e6c50d66c085e7", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "/home/mmeyer/projects/Muse/Muse/Views/Home/Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 172, true);
            WriteLiteral("\r\n<div class=\"text-center\">\r\n    <h1 class=\"display-4\">Tets</h1>\r\n</div>\r\n\r\n<div id=\"gridContainer\"></div>\r\n<div id=\"buttonContainer\"></div>\r\n<div id=\"testChart\"></div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(236, 115, true);
                WriteLiteral("\r\n    <script type=\"text/javascript\">\r\n        function getAlbums() {\r\n            $.ajax({\r\n                url: \'");
                EndContext();
                BeginContext(352, 26, false);
#line 18 "/home/mmeyer/projects/Muse/Muse/Views/Home/Index.cshtml"
                 Write(Url.Action("Get", "Album"));

#line default
#line hidden
                EndContext();
                BeginContext(378, 281, true);
                WriteLiteral(@"',
                success: function (result) {
                    console.debug(result);
                },
                error: function () {
                }
            });
        }

        function getTopArtists() {
            $.ajax({
                url: '");
                EndContext();
                BeginContext(660, 30, false);
#line 29 "/home/mmeyer/projects/Muse/Muse/Views/Home/Index.cshtml"
                 Write(Url.Action("Get", "TopArtist"));

#line default
#line hidden
                EndContext();
                BeginContext(690, 539, true);
                WriteLiteral(@"',
                success: function (result) {
                    console.debug(result);
                },
                error: function () {
                }
            });
        }

        $(""#buttonContainer"").dxButton({
            text: ""Click me!"",
            onClick: function () {
                getTopArtists();
            }
        });

        $(""#gridContainer"").dxDataGrid({
            dataSource: DevExpress.data.AspNet.createStore({
                key: ""album.id"",
                loadUrl: '");
                EndContext();
                BeginContext(1230, 26, false);
#line 48 "/home/mmeyer/projects/Muse/Muse/Views/Home/Index.cshtml"
                     Write(Url.Action("Get", "Album"));

#line default
#line hidden
                EndContext();
                BeginContext(1256, 412, true);
                WriteLiteral(@"'
            }),
            remoteOperations: { groupPaging: true },
            columns: [""album.id"", ""added_at"", ""album.name"", ""album.popularity"", ""album.label""],
            showBorders: true
        });

        var chart = $(""#testChart"").dxChart({
            palette: ""Violet"",
            dataSource: DevExpress.data.AspNet.createStore({
                key: ""ID"",
                loadUrl: '");
                EndContext();
                BeginContext(1669, 33, false);
#line 59 "/home/mmeyer/projects/Muse/Muse/Views/Home/Index.cshtml"
                     Write(Url.Action("Get", "TestChartAPI"));

#line default
#line hidden
                EndContext();
                BeginContext(1702, 1518, true);
                WriteLiteral(@"'
            }),
            commonSeriesSettings: {
                argumentField: ""country"",
                type: 'spline'
            },
            margin: {
                bottom: 20
            },
            argumentAxis: {
                valueMarginsEnabled: false,
                discreteAxisDivisionMode: ""crossLabels"",
                grid: {
                    visible: true
                }
            },
            series: [
                { valueField: ""hydro"", name: ""Hydro-electric"" },
                { valueField: ""oil"", name: ""Oil"" },
                { valueField: ""gas"", name: ""Natural gas"" },
                { valueField: ""coal"", name: ""Coal"" },
                { valueField: ""nuclear"", name: ""Nuclear"" }
            ],
            legend: {
                verticalAlignment: ""bottom"",
                horizontalAlignment: ""center"",
                itemTextPosition: ""bottom""
            },
            title: { 
                text: ""Energy Consumption in 200");
                WriteLiteral(@"4"",
                subtitle: {
                    text: ""(Millions of Tons, Oil Equivalent)""
                }
            },
            ""export"": {
                enabled: true
            },
            tooltip: {
                enabled: true,
                customizeTooltip: function (arg) {
                    return {
                        text: arg.valueText
                    };
                }
            }
        }).dxChart(""instance"");
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
